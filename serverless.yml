service: netex-output-service

provider:
    name: aws
    runtime: nodejs12.x
    region: eu-west-2
    stage: ${opt:stage, 'test'}
    stackName: ${self:service}-${self:provider.stage}
    timeout: 900
    memorySize: 2048
    vpc:
        securityGroupIds:
          - Fn::ImportValue: "${self:provider.stage}:RefDataUploaderLambdaSG"
        subnetIds:
          - Fn::ImportValue: "${self:provider.stage}:PrivateSubnetA"
          - Fn::ImportValue: "${self:provider.stage}:PrivateSubnetB"
    environment:
        RDS_HOST:
          - Fn::ImportValue: "${self:provider.stage}:RdsHostName"   
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
           
    iamRoleStatements:
        - Effect: "Allow"
          Action:
              - "ssm:GetParameter"
          Resource: "*"
        - Effect: 'Allow'
          Action:
              - 's3:GetObject'
              - 's3:PutObject'
          Resource:
              - !Sub arn:aws:s3:::fdbt-matching-data-${self:provider.stage}/*
              - !Sub arn:aws:s3:::fdbt-unvalidated-netex-data-${self:provider.stage}/*
              - !Sub arn:aws:s3:::fdbt-netex-data-${self:provider.stage}/*
        - Effect: 'Allow'
          Action:
              - ses:SendEmail
              - ses:SendRawEmail
          Resource:
              - '*'

functions:
    NetexConvertor:
        handler: src/netex-convertor/handler.netexConvertorHandler
        events:
            - s3: fdbt-matching-data-${self:provider.stage}
              event: s3:ObjectCreated:*

    OdhUploader:
        handler: src/odh-uploader/handler.odhUploaderHandler
        events:
            - s3: fdbt-netex-data-${self:provider.stage}
              event: s3:ObjectCreated:*

plugins:
    - serverless-plugin-typescript
    - serverless-s3-local
    - serverless-offline

package:
    include:
        - ./src/netex-convertor/single-ticket/singleTicketNetexTemplate.xml
        - ./src/netex-convertor/period-ticket/periodTicketNetexTemplate.xml
